############################
#   GENERAL TRAINING SETUP #
############################

# How many training epochs to run
max_epoch: 50

# Every N training‚Äêbatches, print loss to console
log_iter: 2

# Run validation every `val_epoch` epochs
val_epoch: 2

# Directory where your train/val images live:
# - data_root/
#     masks and skeletons are specified by train_list/val_list 
data_root: D:\camerer_ml\datasets\Final-Dataset-Vol1

# Two text files listing "mask_path skeleton_path" (relative to data_root)
train_list: D:\camerer_ml\datasets\Final-Dataset-Vol1\updated_train_skelite.txt
val_list:   D:\camerer_ml\datasets\Final-Dataset-Vol1\updated_test_skelite.txt

dataset_name: crackseg9k

# If you have a pre-trained Skelite checkpoint, point here:
resume_from: D:\camerer_ml\adaptive_pca_3dreproject\Skelite\pretrained\skelite_2d\check\model_best.pt

###########################
#   DATALOADER PARAMETERS #
###########################

# Batch sizes
batch_size:      8
val_batch_size:  8

# Number of DataLoader worker threads
num_workers: 4

########################
#   OPTIMIZER SETTING  #
########################

optimizer: Adam
lr: 1e-5
weight_decay: 1e-7
beta1: 0.9
beta2: 0.999

#############################
#   MODEL ARCHITECTURE      #
#############################

# Must match what `get_model` expects (e.g. "reg_erosion" for 2D thinning)
net_type: reg_erosion
net: 
  network_input_size: 512     # Input size for network
  network_output_size: 72 
  network_depth: 1            # Depth of MLP layers
  network_width: 200          # Width of MLP layers
  kernel_size: [3,3]          # Larger kernel, better skel
  skel_num_iter: 8 
  skel_channels: 64            # Depth of MLP layers
  use_morphology_layer: False
  mip_style: False
  binarize: False
  use_extraction_module: False
  use_inception: False
  extract_feats: ["manhattan_max"]

# Use this to adapt the convolutional layer
hypo_net:
  network_input_channels: 3    # Number of input channels
  network_depth: 2             # Number of input channels

encoder:
  embedding: none            #  Input embedding method
  scale: 2
  embedding_size: 256         # Embedding size for input Fourier feature encoding
  coordinates_size: 1
